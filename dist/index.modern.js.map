{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["import { isArr, isObj, isDate } from 'x-is-type';\n\nexport type equalityChecker = (...args: any[]) => boolean;\nexport type argsComparer = (a: any, b: any) => boolean;\nexport type argsValidator = equalityChecker;\n\nfunction createEqualityChecker(\n\tvalidateArgsFn: argsValidator | null = null,\n\targsComparerFn: argsComparer | null = null\n) {\n\treturn function (...args: any[]): boolean {\n\t\tif (args.length < 2) return true;\n\t\tif (typeof validateArgsFn === 'function' && !validateArgsFn(...args)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst comparer =\n\t\t\ttypeof argsComparerFn === 'function'\n\t\t\t\t? argsComparerFn\n\t\t\t\t: (a: any, b: any) => a === b;\n\t\tfor (let i = 1; i < args.length; i++) {\n\t\t\tconst a = args[i - 1],\n\t\t\t\tb = args[i];\n\t\t\tif (comparer(a, b)) continue;\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n}\n\nconst isEqualConstructor = createEqualityChecker(\n\tnull,\n\t(a, b) => a?.constructor?.name === b?.constructor?.name\n);\n\nconst isEqualDate = createEqualityChecker(\n\tisDate,\n\t(a, b) => Number(a) === Number(b)\n);\n\n/**\n * Determine if multiple arrays contain equal values recursively\n */\nfunction isEqualArr(...args: any[]): boolean {\n\treturn createEqualityChecker(isArr, (a: any[], b: any[]) => {\n\t\tif (a.length !== b.length) return false;\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tif (a[i] === b[i]) continue;\n\t\t\tif (isEqualArr(a[i], b[i])) continue;\n\t\t\tif (isEqualObj(a[i], b[i])) continue;\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t})(...args);\n}\n/**\n * Determine if multiple objects contain equal values recursively\n */\nfunction isEqualObj(...args: any[]): boolean {\n\treturn createEqualityChecker(\n\t\t(...args) => isObj(...args) && isEqualConstructor(...args),\n\t\t(a: Object, b: Object) => {\n\t\t\tconst keys = { a: Object.keys(a), b: Object.keys(b) };\n\t\t\tif (keys.a.length !== keys.b.length) return false;\n\t\t\tfor (const key of keys.a) {\n\t\t\t\tif (a[key] === b[key]) continue;\n\t\t\t\tif (isEqualArr(a[key], b[key])) continue;\n\t\t\t\tif (isEqualObj(a[key], b[key])) continue;\n\t\t\t\tif (isEqualDate(a[key], b[key])) continue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t)(...args);\n}\n\n/**\n * Determine if multiple values are equal,\n * works recursively on arrays and objects.\n */\nfunction isEqual(...args: any[]): boolean {\n\treturn createEqualityChecker(\n\t\tnull,\n\t\t(a, b) => a === b || isEqualObj(a, b) || isEqualArr(a, b)\n\t)(...args);\n}\n\nexport { isEqual, isEqualConstructor, isEqualArr, isEqualObj };\n"],"names":["createEqualityChecker","validateArgsFn","argsComparerFn","args","length","comparer","a","b","i","isEqualConstructor","_a$constructor","constructor","name","_b$constructor","isEqualDate","isDate","Number","isEqualArr","isArr","isEqualObj","isObj","Object","keys","key","isEqual"],"mappings":"yDAMA,SAASA,EACRC,EAAuC,KACvCC,EAAsC,MAEtC,OAAiB,YAAGC,GACnB,GAAIA,EAAKC,OAAS,EAAG,OAAA,EACrB,GAA8B,mBAA1BH,IAAyCA,KAAkBE,GAC9D,OACA,EACD,MAAME,EACqB,qBACvBH,EACA,CAACI,EAAQC,IAAWD,IAAMC,EAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAKC,OAAQI,IAGhC,IAAIH,EAFMF,EAAKK,EAAI,GACdL,EAAKK,IAEV,OACA,EACD,OACA,CAAA,CACD,CAEKC,MAAkBA,EAAGT,EAC1B,KACA,CAACM,EAAGC,oBAAM,MAAAD,GAAA,OAAAI,EAAAJ,EAAGK,kBAAH,EAAAD,EAAgBE,SAAhB,MAAyBL,GAAA,OAAzBM,EAAyBN,EAAGI,kBAA5B,EAAyBE,EAAgBD,KAAzC,GAGME,EAAGd,EACnBe,EACA,CAACT,EAAGC,IAAMS,OAAOV,KAAOU,OAAOT,IAMhC,SAASU,KAAcd,GACtB,OAA4BH,EAACkB,EAAO,CAACZ,EAAUC,KAC9C,GAAID,EAAEF,SAAWG,EAAEH,OAAQ,OAAO,EAClC,IAAK,IAAKI,EAAG,EAAGA,EAAIF,EAAEF,OAAQI,IAC7B,GAAIF,EAAEE,KAAOD,EAAEC,KACXS,EAAWX,EAAEE,GAAID,EAAEC,MACnBW,EAAWb,EAAEE,GAAID,EAAEC,IACvB,OACA,EACD,OAAO,GARoBR,IAStBG,EACN,CAID,SAAAgB,KAAuBhB,GACtB,OAA4BH,EAC3B,IAAIG,IAASiB,KAASjB,IAASM,KAAsBN,GACrD,CAACG,EAAWC,KACX,QAAkBc,OAAOC,KAAKhB,KAAOe,OAAOC,KAAKf,GACjD,GAAIe,EAAOlB,SAAWkB,EAAOlB,OAAQ,OAAO,EAC5C,IAAK,MAAMmB,KAAOD,EACjB,GAAIhB,EAAEiB,KAAShB,EAAEgB,KACbN,EAAWX,EAAEiB,GAAMhB,EAAEgB,MACrBJ,EAAWb,EAAEiB,GAAMhB,EAAEgB,MACrBT,EAAYR,EAAEiB,GAAMhB,EAAEgB,IAC1B,SAED,OACA,GAb0BvB,IAcvBG,EACL,CAMD,SAASqB,KAAWrB,GACnB,OAAOH,EACN,KACA,CAACM,EAAGC,IAAMD,IAAMC,GAAKY,EAAWb,EAAGC,IAAMU,EAAWX,EAAGC,GAFjDP,IAGFG,EACL"}