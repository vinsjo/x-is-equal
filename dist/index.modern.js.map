{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["import { isArr, isObj, isDate } from 'x-is-type';\n\nexport type equalityChecker = (...args: any[]) => boolean;\nexport type argsComparer = (a: any, b: any) => boolean;\nexport type argsValidator = equalityChecker;\n\nfunction createEqualityChecker(\n\tvalidateArgsFn: argsValidator | null = null,\n\targsComparerFn: argsComparer | null = null\n) {\n\treturn function (...args: any[]): boolean {\n\t\tif (args.length < 2) return true;\n\t\tif (typeof validateArgsFn === 'function' && !validateArgsFn(...args)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst comparer = (a: any, b: any) => {\n\t\t\tif (a === b) return true;\n\t\t\treturn typeof argsComparerFn === 'function'\n\t\t\t\t? argsComparerFn(a, b)\n\t\t\t\t: false;\n\t\t};\n\t\ttypeof argsComparerFn === 'function'\n\t\t\t? argsComparerFn\n\t\t\t: (a: any, b: any) => a === b;\n\t\tfor (let i = 1; i < args.length; i++) {\n\t\t\tconst a = args[i - 1],\n\t\t\t\tb = args[i];\n\t\t\tif (comparer(a, b)) continue;\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n}\n\nconst isEqualConstructor = createEqualityChecker(\n\tnull,\n\t(a, b) => a?.constructor?.name === b?.constructor?.name\n);\n\nconst isEqualDate = createEqualityChecker(\n\tisDate,\n\t(a, b) => Number(a) === Number(b)\n);\n\n/**\n * Determine if multiple arrays contain equal values recursively\n */\nfunction isEqualArr(...args: any[]): boolean {\n\treturn createEqualityChecker(isArr, (a: any[], b: any[]) => {\n\t\tif (a.length !== b.length) return false;\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tif (a[i] === b[i]) continue;\n\t\t\tif (isEqualArr(a[i], b[i])) continue;\n\t\t\tif (isEqualObj(a[i], b[i])) continue;\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t})(...args);\n}\n/**\n * Determine if multiple objects contain equal values recursively\n */\nfunction isEqualObj(...args: any[]): boolean {\n\tconst nonCircularKeys = (obj: Object) => {\n\t\tconst keys = Object.keys(obj);\n\t\treturn keys.filter((key) => obj[key] !== obj);\n\t};\n\treturn createEqualityChecker(\n\t\t(...args) => isObj(...args) && isEqualConstructor(...args),\n\t\t(a: Object, b: Object) => {\n\t\t\tconst keys = { a: nonCircularKeys(a), b: nonCircularKeys(b) };\n\t\t\tif (keys.a.length !== keys.b.length) return false;\n\t\t\tfor (const key of keys.a) {\n\t\t\t\tif (a[key] === b[key]) continue;\n\t\t\t\tif (isEqualArr(a[key], b[key])) continue;\n\t\t\t\tif (isEqualObj(a[key], b[key])) continue;\n\t\t\t\tif (isEqualDate(a[key], b[key])) continue;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t)(...args);\n}\n\n/**\n * Determine if multiple values are equal,\n * works recursively on arrays and objects.\n */\nfunction isEqual(...args: any[]): boolean {\n\treturn createEqualityChecker(\n\t\tnull,\n\t\t(a, b) => a === b || isEqualObj(a, b) || isEqualArr(a, b)\n\t)(...args);\n}\n\nexport { isEqual, isEqualConstructor, isEqualArr, isEqualObj };\n"],"names":["createEqualityChecker","validateArgsFn","argsComparerFn","args","length","i","a","b","isEqualConstructor","_a$constructor","constructor","name","_b$constructor","isEqualDate","isDate","Number","isEqualArr","isArr","isEqualObj","nonCircularKeys","obj","Object","keys","filter","key","isObj","isEqual"],"mappings":"yDAMA,SAASA,EACRC,EAAuC,KACvCC,EAAsC,MAEtC,OAAO,YAAaC,GACnB,GAAIA,EAAKC,OAAS,EAAG,OAAO,EAC5B,GAA8B,mBAAnBH,IAAkCA,KAAkBE,GAC9D,OAAO,EAWR,IAAK,IAAKE,EAAG,EAAGA,EAAIF,EAAKC,OAAQC,IAGhC,MAZiBC,EAUPH,EAAKE,EAAI,OAVME,EAWpBJ,EAAKE,KATuB,mBAAnBH,GACXA,EAAeI,EAAGC,IAUrB,OAAO,EAbS,IAACD,EAAQC,EAe1B,OACA,CAAA,CACD,CAEKC,MAAkBA,EAAGR,EAC1B,KACA,CAACM,EAAGC,oBAAM,MAAAD,GAAA,OAAAG,EAAAH,EAAGI,kBAAH,EAAAD,EAAgBE,SAAhB,MAAyBJ,GAAzB,OAAAK,EAAyBL,EAAGG,kBAA5B,EAAyBE,EAAgBD,KAAzC,GAGME,EAAGb,EACnBc,EACA,CAACR,EAAGC,IAAMQ,OAAOT,KAAOS,OAAOR,IAMhC,SAAAS,KAAuBb,GACtB,OAAOH,EAAsBiB,EAAO,CAACX,EAAUC,KAC9C,GAAID,EAAEF,SAAWG,EAAEH,OAAQ,OAAA,EAC3B,IAAK,IAAKC,EAAG,EAAGA,EAAIC,EAAEF,OAAQC,IAC7B,GAAIC,EAAED,KAAOE,EAAEF,KACXW,EAAWV,EAAED,GAAIE,EAAEF,MACnBa,EAAWZ,EAAED,GAAIE,EAAEF,IACvB,OACA,EACD,OAAO,GARDL,IASDG,EACN,CAID,SAAAe,KAAuBf,GACtB,MAAqBgB,EAAIC,GACXC,OAAOC,KAAKF,GACbG,OAAQC,GAAQJ,EAAII,KAASJ,GAE1C,OAAOpB,EACN,IAAIG,IAASsB,KAAStB,IAASK,KAAsBL,GACrD,CAACG,EAAWC,KACX,MAAMe,EAAYH,EAAgBb,GAA5BgB,EAAmCH,EAAgBZ,GACzD,GAAIe,EAAOlB,SAAWkB,EAAOlB,OAAQ,OAAO,EAC5C,IAAK,MAAMoB,KAAOF,EACjB,GAAIhB,EAAEkB,KAASjB,EAAEiB,KACbR,EAAWV,EAAEkB,GAAMjB,EAAEiB,MACrBN,EAAWZ,EAAEkB,GAAMjB,EAAEiB,MACrBX,EAAYP,EAAEkB,GAAMjB,EAAEiB,IAC1B,OAAO,EAER,OACA,GAbKxB,IAcFG,EACL,CAMD,SAASuB,KAAWvB,GACnB,OAA4BH,EAC3B,KACA,CAACM,EAAGC,IAAMD,IAAMC,GAAKW,EAAWZ,EAAGC,IAAMS,EAAWV,EAAGC,GAF5BP,IAGvBG,EACL"}